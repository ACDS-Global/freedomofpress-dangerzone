version: 2.1

jobs:
  build-container-image:
    working_directory: /app
    docker:
      - image: docker:20.10.11-dind
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys: v1-{{ .Revision }}
          paths:
            - /caches/dangerzone-converter.tar.gz
            - /caches/image-id.txt
      - run:
          name: Build Dangerzone image
          command: |
            docker build --cache-from=dangerzone.rocks/dangerzone --tag dangerzone.rocks/dangerzone dangerzone-converter
      - run:
          name: Save Dangerzone image and image-id.txt to cache
          command: |
            mkdir -p /caches
            docker save -o /caches/dangerzone-converter.tar dangerzone.rocks/dangerzone
            gzip /caches/dangerzone-converter.tar
            docker image ls dangerzone.rocks/dangerzone | grep "dangerzone.rocks/dangerzone" | tr -s ' ' | cut -d' ' -f3 > /caches/image-id.txt
      - save_cache:
          key: v1-{{ .Revision }}
          paths:
            - /caches/dangerzone-converter.tar.gz
            - /caches/image-id.txt

  build-ubuntu-impish:
    docker:
      - image: ubuntu:21.10
    steps:
      - run:
          name: Install dependencies
          command: |
            export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true
            apt-get update
            apt-get install -y git ssh ruby-dev rubygems podman python-all dh-python python3 python3-stdeb python3-pyside2.qtcore python3-pyside2.qtgui python3-pyside2.qtwidgets python3-appdirs python3-click python3-xdg python3-requests python3-colorama
            gem install -N rake
            gem install -N package_cloud
      - checkout
      - run:
          name: Create the .deb package
          command: |
            ./install/linux/build-deb.py
            dpkg -i deb_dist/dangerzone_*-1_all.deb
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat share/version.txt)
            package_cloud push firstlookmedia/code/ubuntu/impish deb_dist/dangerzone_${VERSION}-1_all.deb
            package_cloud push firstlookmedia/code/ubuntu/impish deb_dist/dangerzone_${VERSION}-1.dsc

  build-ubuntu-hirsute:
    docker:
      # The ubuntu:21.04 container doesn't work in CircleCI until they update
      # their docker runtime due to this bug:
      # https://stackoverflow.com/questions/66319610/gpg-error-in-ubuntu-21-04-after-second-apt-get-update-during-docker-build
      # So for now, we'll build the 21.04 package in a 20.10 container
      # - image: ubuntu:21.04
      - image: ubuntu:20.10
    steps:
      - run:
          name: Install dependencies
          command: |
            export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true
            apt-get update
            apt-get install -y git ssh ruby-dev rubygems podman python-all dh-python python3 python3-stdeb python3-pyside2.qtcore python3-pyside2.qtgui python3-pyside2.qtwidgets python3-appdirs python3-click python3-xdg python3-requests python3-colorama
            gem install -N rake
            gem install -N package_cloud
      - checkout
      - run:
          name: Create the .deb package
          command: |
            ./install/linux/build-deb.py
            dpkg -i deb_dist/dangerzone_*-1_all.deb
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat share/version.txt)
            package_cloud push firstlookmedia/code/ubuntu/hirsute deb_dist/dangerzone_${VERSION}-1_all.deb
            package_cloud push firstlookmedia/code/ubuntu/hirsute deb_dist/dangerzone_${VERSION}-1.dsc

  build-ubuntu-groovy:
    docker:
      - image: ubuntu:20.10
    steps:
      - run:
          name: Install dependencies
          command: |
            export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true
            apt-get update
            apt-get install -y git ssh ruby-dev rubygems podman python-all dh-python python3 python3-stdeb python3-pyside2.qtcore python3-pyside2.qtgui python3-pyside2.qtwidgets python3-appdirs python3-click python3-xdg python3-requests python3-colorama
            gem install -N rake
            gem install -N package_cloud
      - checkout
      - run:
          name: Create the .deb package
          command: |
            ./install/linux/build-deb.py
            dpkg -i deb_dist/dangerzone_*-1_all.deb
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat share/version.txt)
            package_cloud push firstlookmedia/code/ubuntu/groovy deb_dist/dangerzone_${VERSION}-1_all.deb
            package_cloud push firstlookmedia/code/ubuntu/groovy deb_dist/dangerzone_${VERSION}-1.dsc

  build-debian-bullseye:
    docker:
      - image: debian:bullseye
    steps:
      - run:
          name: Install dependencies
          command: |
            apt-get update
            apt-get install -y git ssh ruby-dev rubygems podman python-all dh-python python3 python3-stdeb python3-pyside2.qtcore python3-pyside2.qtgui python3-pyside2.qtwidgets python3-appdirs python3-click python3-xdg python3-requests python3-colorama
            gem install -N rake
            gem install -N package_cloud
      - checkout
      - run:
          name: Create the .deb package
          command: |
            ./install/linux/build-deb.py
            dpkg -i deb_dist/dangerzone_*-1_all.deb
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat share/version.txt)
            package_cloud push firstlookmedia/code/debian/bullseye deb_dist/dangerzone_${VERSION}-1_all.deb
            package_cloud push firstlookmedia/code/debian/bullseye deb_dist/dangerzone_${VERSION}-1.dsc

  build-fedora-34:
    docker:
      # The package_cloud ruby gem doesn't work properly when installed in fedora 34,
      # so for now we'll built the fedora 34 package in a fedora:33 container
      # - image: fedora:34
      - image: fedora:33
    steps:
      - run:
          name: Install dependencies
          command: |
            dnf install -y podman git openssh ruby-devel make automake gcc gcc-c++ rpm-build python3-setuptools python3-pyside2 python3-appdirs python3-click python3-pyxdg python3-requests python3-colorama
            gem install package_cloud
      - checkout
      - run:
          name: Create the .rpm package
          command: |
            ./install/linux/build-rpm.py
            dnf install -y dist/dangerzone-*-1.noarch.rpm
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat share/version.txt)
            package_cloud push firstlookmedia/code/fedora/34 dist/dangerzone-${VERSION}-1.noarch.rpm
            package_cloud push firstlookmedia/code/fedora/34 dist/dangerzone-${VERSION}-1.src.rpm

  build-fedora-33:
    docker:
      - image: fedora:33
    steps:
      - run:
          name: Install dependencies
          command: |
            dnf install -y podman git openssh ruby-devel make automake gcc gcc-c++ rpm-build python3-setuptools python3-pyside2 python3-appdirs python3-click python3-pyxdg python3-requests python3-colorama
            gem install package_cloud
      - checkout
      - run:
          name: Create the .rpm package
          command: |
            ./install/linux/build-rpm.py
            dnf install -y dist/dangerzone-*-1.noarch.rpm
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat share/version.txt)
            package_cloud push firstlookmedia/code/fedora/33 dist/dangerzone-${VERSION}-1.noarch.rpm
            package_cloud push firstlookmedia/code/fedora/33 dist/dangerzone-${VERSION}-1.src.rpm

  build-fedora-32:
    docker:
      - image: fedora:32
    steps:
      - run:
          name: Install dependencies
          command: |
            dnf install -y podman git openssh ruby-devel make automake gcc gcc-c++ rpm-build python3-setuptools python3-pyside2 python3-appdirs python3-click python3-pyxdg python3-requests python3-colorama
            gem install package_cloud
      - checkout
      - run:
          name: Create the .rpm package
          command: |
            ./install/linux/build-rpm.py
            dnf install -y dist/dangerzone-*-1.noarch.rpm
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat share/version.txt)
            package_cloud push firstlookmedia/code/fedora/32 dist/dangerzone-${VERSION}-1.noarch.rpm
            package_cloud push firstlookmedia/code/fedora/32 dist/dangerzone-${VERSION}-1.src.rpm

workflows:
  version: 2
  build-tags:
    jobs:
      # Build container image on every commit
      - build-container-image:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

      # Ubuntu 21.10 (impish) not yet supported by packagecloud.io
      # - build-ubuntu-impish:Â 
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/
      - build-ubuntu-hirsute:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-ubuntu-groovy:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-debian-bullseye:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-fedora-34:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-fedora-33:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-fedora-32:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
