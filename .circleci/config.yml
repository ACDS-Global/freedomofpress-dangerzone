version: 2.1

jobs:
  build-ubuntu-focal:
    docker:
      - image: ubuntu:20.04
    steps:
      - run:
          name: Install dependencies
          command: |
            export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true
            apt-get update
            apt-get install -y git ssh ruby-dev rubygems python-all dh-python python3 python3-stdeb python3-pyside2.qtcore python3-pyside2.qtgui python3-pyside2.qtwidgets python3-appdirs python3-click python3-xdg python3-requests python3-termcolor
            gem install -N rake
            gem install -N package_cloud
      - checkout
      - run:
          name: Create the .deb package
          command: |
            ./install/linux/build_deb.py
            dpkg -i deb_dist/dangerzone_*-1_all.deb
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat dangerzone/__init__.py |grep "dangerzone_version = " |cut -d '"' -f2)
            package_cloud push firstlookmedia/code/ubuntu/focal deb_dist/dangerzone_${VERSION}-1_all.deb
            package_cloud push firstlookmedia/code/ubuntu/focal deb_dist/dangerzone_${VERSION}-1.dsc

  build-ubuntu-groovy:
    docker:
      - image: ubuntu:20.10
    steps:
      - run:
          name: Install dependencies
          command: |
            export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true
            apt-get update
            apt-get install -y git ssh ruby-dev rubygems python-all dh-python python3 python3-stdeb python3-pyside2.qtcore python3-pyside2.qtgui python3-pyside2.qtwidgets python3-appdirs python3-click python3-xdg python3-requests python3-termcolor
            gem install -N rake
            gem install -N package_cloud
      - checkout
      - run:
          name: Create the .deb package
          command: |
            ./install/linux/build_deb.py
            dpkg -i deb_dist/dangerzone_*-1_all.deb
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat dangerzone/__init__.py |grep "dangerzone_version = " |cut -d '"' -f2)
            package_cloud push firstlookmedia/code/ubuntu/groovy deb_dist/dangerzone_${VERSION}-1_all.deb
            package_cloud push firstlookmedia/code/ubuntu/groovy deb_dist/dangerzone_${VERSION}-1.dsc

  build-debian-buster:
    docker:
      - image: debian:buster
    steps:
      - run:
          name: Install dependencies
          command: |
            apt-get update
            apt-get install -y git ssh ruby-dev rubygems python-all dh-python python3 python3-stdeb python3-pyside2.qtcore python3-pyside2.qtgui python3-pyside2.qtwidgets python3-appdirs python3-click python3-xdg python3-requests python3-termcolor
            gem install --no-ri --no-rdoc rake
            gem install --no-ri --no-rdoc package_cloud
      - checkout
      - run:
          name: Create the .deb package
          command: |
            ./install/linux/build_deb.py
            dpkg -i deb_dist/dangerzone_*-1_all.deb
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat dangerzone/__init__.py |grep "dangerzone_version = " |cut -d '"' -f2)
            package_cloud push firstlookmedia/code/debian/buster deb_dist/dangerzone_${VERSION}-1_all.deb
            package_cloud push firstlookmedia/code/debian/buster deb_dist/dangerzone_${VERSION}-1.dsc

  build-debian-bullseye:
    docker:
      - image: debian:bullseye
    steps:
      - run:
          name: Install dependencies
          command: |
            apt-get update
            apt-get install -y git ssh ruby-dev rubygems python-all dh-python python3 python3-stdeb python3-pyside2.qtcore python3-pyside2.qtgui python3-pyside2.qtwidgets python3-appdirs python3-click python3-xdg python3-requests python3-termcolor
            gem install -N rake
            gem install -N package_cloud
      - checkout
      - run:
          name: Create the .deb package
          command: |
            ./install/linux/build_deb.py
            dpkg -i deb_dist/dangerzone_*-1_all.deb
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat dangerzone/__init__.py |grep "dangerzone_version = " |cut -d '"' -f2)
            package_cloud push firstlookmedia/code/debian/bullseye deb_dist/dangerzone_${VERSION}-1_all.deb
            package_cloud push firstlookmedia/code/debian/bullseye deb_dist/dangerzone_${VERSION}-1.dsc

  build-fedora-31:
    docker:
      - image: fedora:31
    steps:
      - run:
          name: Install dependencies
          command: |
            dnf install -y git openssh ruby-devel make automake gcc gcc-c++ rpm-build python3-pyside2 python3-appdirs python3-click python3-pyxdg python3-requests python3-termcolor
            gem install package_cloud
      - checkout
      - run:
          name: Create the .rpm package
          command: |
            ./install/linux/build_rpm.py
            dnf install -y dist/dangerzone-*-1.noarch.rpm
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat dangerzone/__init__.py |grep "dangerzone_version = " |cut -d '"' -f2)
            package_cloud push firstlookmedia/code/fedora/31 dist/dangerzone-${VERSION}-1.noarch.rpm
            package_cloud push firstlookmedia/code/fedora/31 dist/dangerzone-${VERSION}-1.src.rpm

  build-fedora-32:
    docker:
      - image: fedora:32
    steps:
      - run:
          name: Install dependencies
          command: |
            dnf install -y git openssh ruby-devel make automake gcc gcc-c++ rpm-build python3-pyside2 python3-appdirs python3-click python3-pyxdg python3-requests python3-termcolor
            gem install package_cloud
      - checkout
      - run:
          name: Create the .rpm package
          command: |
            ./install/linux/build_rpm.py
            dnf install -y dist/dangerzone-*-1.noarch.rpm
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat dangerzone/__init__.py |grep "dangerzone_version = " |cut -d '"' -f2)
            package_cloud push firstlookmedia/code/fedora/32 dist/dangerzone-${VERSION}-1.noarch.rpm
            package_cloud push firstlookmedia/code/fedora/32 dist/dangerzone-${VERSION}-1.src.rpm

  build-fedora-33:
    docker:
      - image: fedora:33
    steps:
      - run:
          name: Install dependencies
          command: |
            dnf install -y git openssh ruby-devel make automake gcc gcc-c++ rpm-build python3-pyside2 python3-appdirs python3-click python3-pyxdg python3-requests python3-termcolor
            gem install package_cloud
      - checkout
      - run:
          name: Create the .rpm package
          command: |
            ./install/linux/build_rpm.py
            dnf install -y dist/dangerzone-*-1.noarch.rpm
      - run:
          name: Deploy to packagecloud.io
          command: |
            VERSION=$(cat dangerzone/__init__.py |grep "dangerzone_version = " |cut -d '"' -f2)
            package_cloud push firstlookmedia/code/fedora/33 dist/dangerzone-${VERSION}-1.noarch.rpm
            package_cloud push firstlookmedia/code/fedora/33 dist/dangerzone-${VERSION}-1.src.rpm

workflows:
  version: 2
  build-tags:
    jobs:
      - build-ubuntu-focal:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      # - build-ubuntu-groovy:
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/
      - build-debian-buster:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-debian-bullseye:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-fedora-31:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-fedora-32:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      # - build-fedora-33:
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/
